apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: neutron-linuxbridge-agent
  labels:
    chart: neutron
spec:
  template:
    metadata:
      labels:
        app: neutron-linuxbridge-agent
    spec:
      hostNetwork: true
      nodeSelector:
        openstack-compute: ""
      containers:
        - name: neutron-linuxbrige-agent
          # command: ["bash", "-c", "echo 'pre setup' && sleep 3600;"]
          command: [
            "/opt/neutron/bin/neutron-linuxbridge-agent",
            "--config-file", "/etc/neutron/neutron.conf",
            "--config-file", "/etc/neutron/ml2_conf.ini",
            "--config-file", "/etc/neutron/linuxbridge_agent.ini",
          ]
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: true
          volumeMounts:
            - name: etc-resolv-conf
              mountPath: /etc/resolv.conf
              subPath: resolv.conf
            - name: etc-neutron
              mountPath: /etc/neutron
            - name: bin-neutron
              mountPath: /mnt/neutron/bin
            - name: lib
              mountPath: /lib/
            - name: lib64
              mountPath: /lib64/
            - name: usr
              mountPath: /usr/
            - name: var
              mountPath: /var/
            - name: sbin
              mountPath: /sbin/
      volumes:
        - name: etc-resolv-conf
          configMap:
            name: etc-resolv-conf
        - name: etc-neutron
          configMap:
            name: etc-neutron
        - name: bin-neutron
          configMap:
            name: bin-neutron
            defaultMode: 0755
        - name: sbin
          hostPath:
            path: /sbin
        - name: lib
          hostPath:
            path: /lib
        - name: lib64
          hostPath:
            path: /lib64
        - name: usr
          hostPath:
            path: /usr
        - name: var
          hostPath:
            path: /var
